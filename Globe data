//this function assigns values to the attributes in the array
void tables(){
  table[0] = loadTable("all_hour.csv", "header");
  table[1] = loadTable("all_day.csv", "header");
  table[2] = loadTable("all_week.csv", "header");
  table[3] = loadTable("all_month.csv", "header");
}

//this function searches through the first table to find all rows in the 
//latitude, longitude and magnitude columns. It also maps the data to the 
//sphere and create a small rect() that purtrudes virtically from the centre
//of the sphere. the if statement below changes the color of the rect() 
//depending on the size of the magnitude.
void data1(){
  
  for (TableRow row : table[0].rows()){
  float lat = row.getFloat("latitude");
  float lon = row.getFloat("longitude");
  float mag = row.getFloat("mag");    
  float theta = radians(lat) + PI/2;
  float phi = radians(-lon) + PI;
  float x = r * sin(theta) * cos(phi);
  float y = r * sin(theta) * sin(phi);
  float z = r * cos(theta);
  
  float h = pow(10, mag);
  float maxh = pow(10, 7);
  h = map(h, 0, maxh,10, 100);
  PVector pos = new PVector(x,y,z);
  PVector xaxis = new PVector(1,0,0);
  float angleb = PVector.angleBetween(xaxis, pos);
  PVector raxis = xaxis.cross(pos);
  
  pushMatrix();
  translate(x,y,z);
  rotate(angleb, raxis.x, raxis.y, raxis.z);
  if (mag <= 1){
    fill(51, 204, 51);
    box(h,5,5);
  }else if (mag >= 4){
    fill(255, 153, 0);
    box(h,5,5);
  }else if (mag == 7){
    fill(255, 0, 0);
    box(h,5,5);
  }
  popMatrix();
  }
}

void data2(){
  for (TableRow row : table[1].rows()){
  float lat = row.getFloat("latitude");
  float lon = row.getFloat("longitude");
  float mag = row.getFloat("mag");    
  float theta = radians(lat) + PI/2;
  float phi = radians(-lon) + PI;
  float x = r * sin(theta) * cos(phi);
  float y = r * sin(theta) * sin(phi);
  float z = r * cos(theta);
  
  float h = pow(10, mag);
  float maxh = pow(10, 7);
  h = map(h, 0, maxh,10, 100);
  PVector pos = new PVector(x,y,z);
  PVector xaxis = new PVector(1,0,0);
  float angleb = PVector.angleBetween(xaxis, pos);
  PVector raxis = xaxis.cross(pos);
  
  pushMatrix();
  translate(x,y,z);
  rotate(angleb, raxis.x, raxis.y, raxis.z);
  if (mag <= 1){
    fill(51, 204, 51);
    box(h,5,5);
  }else if (mag >= 4){
    fill(255, 153, 0);
    box(h,5,5);
  }else if (mag == 7){
    fill(255, 0, 0);
    box(h,5,5);
  }
  popMatrix();
  }
}

void data3(){
  for (TableRow row : table[2].rows()){
  float lat = row.getFloat("latitude");
  float lon = row.getFloat("longitude");
  float mag = row.getFloat("mag");    
  float theta = radians(lat) + PI/2;
  float phi = radians(-lon) + PI;
  float x = r * sin(theta) * cos(phi);
  float y = r * sin(theta) * sin(phi);
  float z = r * cos(theta);
  
  float h = pow(10, mag);
  float maxh = pow(10, 7);
  h = map(h, 0, maxh,10, 100);
  PVector pos = new PVector(x,y,z);
  PVector xaxis = new PVector(1,0,0);
  float angleb = PVector.angleBetween(xaxis, pos);
  PVector raxis = xaxis.cross(pos);
  
  pushMatrix();
  translate(x,y,z);
  rotate(angleb, raxis.x, raxis.y, raxis.z);
  if (mag <= 1){
    fill(51, 204, 51);
    box(h,5,5);
  }else if (mag >= 4){
    fill(255, 153, 0);
    box(h,5,5);
  }else if (mag == 7){
    fill(255, 0, 0);
    box(h,5,5);
  }
  popMatrix();
  }
}

void data4(){
  for (TableRow row : table[3].rows()){
  float lat = row.getFloat("latitude");
  float lon = row.getFloat("longitude");
  float mag = row.getFloat("mag");    
  float theta = radians(lat) + PI/2;
  float phi = radians(-lon) + PI;
  float x = r * sin(theta) * cos(phi);
  float y = r * sin(theta) * sin(phi);
  float z = r * cos(theta);
  
  float h = pow(10, mag);
  float maxh = pow(10, 7);
  h = map(h, 0, maxh,10, 100);
  PVector pos = new PVector(x,y,z);
  PVector xaxis = new PVector(1,0,0);
  float angleb = PVector.angleBetween(xaxis, pos);
  PVector raxis = xaxis.cross(pos);
  
  pushMatrix();
  translate(x,y,z);
  rotate(angleb, raxis.x, raxis.y, raxis.z);
  if (mag <= 1){
    fill(51, 204, 51);
    box(h,5,5);
  }else if (mag >= 4){
    fill(255, 153, 0);
    box(h,5,5);
  }else if (mag == 7){
    fill(255, 0, 0);
    box(h,5,5);
  }
  popMatrix();
  }
}
